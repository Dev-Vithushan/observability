---
apiVersion: v1
kind: ConfigMap
metadata:
  name: helm-values-tempo-stack-regional
  namespace: oe-tempo
data:
  values.yaml: |
    ingester:
      zoneAwareReplication:
        # -- Enable zone-aware replication for ingester
        enabled: true
        # -- Maximum number of ingesters that can be unavailable per zone during rollout
        maxUnavailable: 50
        # -- topologyKey to use in pod anti-affinity. If unset, no anti-affinity rules are generated. If set, the generated anti-affinity rule makes sure that pods from different zones do not mix.
        # E.g.: topologyKey: 'kubernetes.io/hostname'
        topologyKey: null
        # -- Zone definitions for ingester zones. Note: you have to redefine the whole list to change parts as YAML does not allow to modify parts of a list.
        zones:
          # -- Name of the zone, used in labels and selectors. Must follow Kubernetes naming restrictions: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
          - name: zone-a
            # -- nodeselector to restrict where pods of this zone can be placed. E.g.:
            # nodeSelector:
            #   topology.kubernetes.io/zone: zone-a
            nodeSelector:
              kubernetes.azure.com/agentpool: lnxusr001
              topology.kubernetes.io/zone: westeurope-1
            # -- extraAffinity adds user defined custom affinity rules (merged with generated rules)
            extraAffinity: {}
            # -- Ingester data Persistent Volume Storage Class
            # If defined, storageClassName: <storageClass>
            # If set to "-", then use `storageClassName: ""`, which disables dynamic provisioning
            # If undefined or set to null (the default), then fall back to the value of `ingester.persistentVolume.storageClass`.
            storageClass: null
          # -- Name of the zone, used in labels and selectors. Must follow Kubernetes naming restrictions: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
          - name: zone-b
            # -- nodeselector to restrict where pods of this zone can be placed. E.g.:
            # nodeSelector:
            #   topology.kubernetes.io/zone: zone-b
            nodeSelector:
              kubernetes.azure.com/agentpool: lnxusr001
              topology.kubernetes.io/zone: westeurope-2
            # -- extraAffinity adds user defined custom affinity rules (merged with generated rules)
            extraAffinity: {}
            # -- Ingester data Persistent Volume Storage Class
            # If defined, storageClassName: <storageClass>
            # If set to "-", then use `storageClassName: ""`, which disables dynamic provisioning
            # If undefined or set to null (the default), then fall back to the value of `ingester.persistentVolume.storageClass`.
            storageClass: null
          # -- Name of the zone, used in labels and selectors. Must follow Kubernetes naming restrictions: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
          - name: zone-c
            # -- nodeselector to restrict where pods of this zone can be placed. E.g.:
            # nodeSelector:
            #   topology.kubernetes.io/zone: zone-c
            nodeSelector:
              kubernetes.azure.com/agentpool: lnxusr001
              topology.kubernetes.io/zone: westeurope-3
            # -- extraAffinity adds user defined custom affinity rules (merged with generated rules)
            extraAffinity: {}
            # -- Ingester data Persistent Volume Storage Class
            # If defined, storageClassName: <storageClass>
            # If set to "-", then use `storageClassName: ""`, which disables dynamic provisioning
            # If undefined or set to null (the default), then fall back to the value of `ingester.persistentVolume.storageClass`.
            storageClass: null
    overrides:
      # -- default config values for all tenants, can be overridden by per-tenant overrides. If a tenant's specific overrides are not found in the `per_tenant_overrides` block, the values in this `default` block will be used. Configs inside this block should follow the new overrides indentation format
      defaults:
        metrics_generator:
          #processors: [local-blocks, service-graphs, span-metrics]
          processors: [local-blocks, service-graphs]
    metricsGenerator:
      config:
        processor:
          local_blocks:
            # -- Whether to filter server spans from local blocks processing
            filter_server_spans: false
            # -- Whether to flush traces to storage when processing local blocks
            flush_to_storage: true
          #span_metrics:
          #  dimensions: [http.request.method, http.response.status_code, http.route]
          #  histogram_buckets: [0.005,0.01,0.025,0.05,0.1,0.25,0.5,1,2.5,5,10]
          #  enable_target_info: true
          service_graphs:
            dimensions: [http.request.method, http.response.status_code, http.route]
            enable_virtual_node_label: true
