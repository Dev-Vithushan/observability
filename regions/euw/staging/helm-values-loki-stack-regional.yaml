---
apiVersion: v1
kind: ConfigMap
metadata:
  name: helm-values-loki-stack-regional
  namespace: oe-loki
data:
  values.yaml: |
    fullnameOverride: "loki"
    ## @param fullnameOverride String to fully override common.names.fullname template
    loki:
      limits_config:
        reject_old_samples: false
        reject_old_samples_max_age: 72h
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 30m
        tsdb_max_query_parallelism: 128
        query_timeout: 600s
        allow_structured_metadata: true
        volume_enabled: true
        retention_period: 30d
        index_gateway_shard_size: 1
        #per_stream_rate_limit: 10240M
        #ingestion_rate_mb: 100000
        #ingestion_burst_size_mb: 500
        #max_global_streams_per_user: 0
        ingestion_rate_mb: 200
        ingestion_burst_size_mb: 400
        per_stream_rate_limit: 200M
        per_stream_rate_limit_burst: 400M
        max_global_streams_per_user: 10000000
        max_streams_per_user: 10000000
        max_line_size: 0
        ingestion_rate_strategy: local
        max_query_parallelism: 32
        max_entries_limit_per_query: 100000000
        max_query_series: 1000000
        max_line_size: 0
        deletion_mode: "filter-and-delete"
        retention_stream:
          - selector: '{job="cloudflare-worker-logpush"}'
            priority: 1
            period: 14d
          - selector: '{job="cloudflare-http-logpush"}'
            priority: 1
            period: 30d
          - selector: '{job="cloudflare-ch-tls-logpush"}'
            priority: 1
            period: 30d
          - selector: '{job="azure-firewall-logs"}'
            priority: 1
            period: 30d
        shard_streams:
          enabled: true
        allow_structured_metadata: true
        otlp_config:
          resource_attributes:
            attributes_config:
              - action: index_label
                attributes:
                  - job
                  - worker
                  - zone
                  - edgerequesthost
                  - cluster
                  - location
      rulerConfig:
        wal:
          dir: /var/loki/ruler-wal
        storage:
          type: local
          local:
            directory: /var/loki/rules
        rule_path: /var/loki/rules/fake
        remote_write:
          enabled: true
          client:
            url: http://kube-prometheus-stack-prometheus.oe-prometheus.svc.cluster.local:9090/api/v1/write
        ring:
          kvstore:
            store: memberlist
        enable_api: true
        enable_sharding: true
        alertmanager_url: http://kube-prometheus-stack-alertmanager.oe-prometheus.svc.cluster.local:9093
        enable_alertmanager_v2: true
    # Configuration for the gateway
    gateway:
      # -- Specifies whether the gateway should be enabled
      enabled: true
      # -- Number of replicas for the gateway
      replicas: 1
      # -- Default container port
      containerPort: 8080
      # -- Enable logging of 2xx and 3xx HTTP requests
      verboseLogging: true
      autoscaling:
        # -- Enable autoscaling for the gateway
        enabled: false
        # -- Minimum autoscaling replicas for the gateway
        minReplicas: 1
        # -- Maximum autoscaling replicas for the gateway
        maxReplicas: 3
        # -- Target CPU utilisation percentage for the gateway
        targetCPUUtilizationPercentage: 60
        # -- Target memory utilisation percentage for the gateway
        targetMemoryUtilizationPercentage:
        # -- See `kubectl explain deployment.spec.strategy` for more
        # -- ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
        # -- Behavior policies while scaling.
        behavior: {}
        #    scaleUp:
        #     stabilizationWindowSeconds: 300
        #     policies:
        #     - type: Pods
        #       value: 1
        #       periodSeconds: 60
        #    scaleDown:
        #     stabilizationWindowSeconds: 300
        #     policies:
        #     - type: Pods
        #       value: 1
        #       periodSeconds: 180
      deploymentStrategy:
        type: RollingUpdate
      image:
        # -- The Docker registry for the gateway image
        registry: docker.io
        # -- The gateway image repository
        repository: nginxinc/nginx-unprivileged
        # -- The gateway image tag
        tag: 1.27-alpine
        # -- Overrides the gateway image tag with an image digest
        digest: null
        # -- The gateway image pull policy
        pullPolicy: IfNotPresent
      # -- The name of the PriorityClass for gateway pods
      priorityClassName: null
      # -- Annotations for gateway deployment
      annotations: {}
      # -- Annotations for gateway pods
      podAnnotations: {}
      # -- Additional labels for gateway pods
      podLabels: {}
      # -- Additional CLI args for the gateway
      extraArgs:
        - -config.expand-env=true
      # -- Environment variables to add to the gateway pods
      extraEnv: []
      # -- Environment variables from secrets or configmaps to add to the gateway pods
      extraEnvFrom:
        - secretRef:
            name: loki-secret
      # -- Lifecycle for the gateway container
      lifecycle: {}
      # -- Volumes to add to the gateway pods
      extraVolumes: []
      # -- Volume mounts to add to the gateway pods
      extraVolumeMounts: []
      # -- The SecurityContext for gateway containers
      podSecurityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      # -- The SecurityContext for gateway containers
      containerSecurityContext:
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
      # -- Resource requests and limits for the gateway
      resources: {}
      # -- Containers to add to the gateway pods
      extraContainers: []
      # -- Grace period to allow the gateway to shutdown before it is killed
      terminationGracePeriodSeconds: 30
      # -- Affinity for gateway pods.
      # @default -- Hard node anti-affinity
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: gateway
              topologyKey: kubernetes.io/hostname
      # -- DNS config for gateway pods
      dnsConfig: {}
      # -- Node selector for gateway pods
      nodeSelector: {}
      # -- Topology Spread Constraints for gateway pods
      topologySpreadConstraints: []
      # -- Tolerations for gateway pods
      tolerations: []
      # Gateway service configuration
      service:
        # -- Port of the gateway service
        port: 80
        # -- Type of the gateway service
        type: ClusterIP
        # -- ClusterIP of the gateway service
        clusterIP: null
        # -- (int) Node port if service type is NodePort
        nodePort: null
        # -- Load balancer IPO address if service type is LoadBalancer
        loadBalancerIP: null
        # -- Annotations for the gateway service
        annotations: {}
        # -- Labels for gateway service
        labels: {}
      # Gateway ingress configuration
      ingress:
        # -- Specifies whether an ingress for the gateway should be created
        enabled: true
        # -- Ingress Class Name. MAY be required for Kubernetes versions >= 1.18
        ingressClassName: "kong"
        # -- Annotations for the gateway ingress
        annotations:
           konghq.com/https-redirect-status-code: "301"
           konghq.com/protocols: https
        # -- Labels for the gateway ingress
        labels: {}
        # -- Hosts configuration for the gateway ingress, passed through the `tpl` function to allow templating
        hosts:
          - host: loki-${env_type}-${region}.sitecorecloud.app
            paths:
              - path: /
                pathType: Prefix
          - host: loki-${env_type}-${region}.sitecore-staging.cloud
            paths:
              - path: /
                pathType: Prefix
          #- host: gateway.loki.example.com
          #  paths:
          #    - path: /
                # -- pathType (e.g. ImplementationSpecific, Prefix, .. etc.) might also be required by some Ingress Controllers
                # pathType: Prefix
        # -- TLS configuration for the gateway ingress. Hosts passed through the `tpl` function to allow templating
        tls: []
        #  - secretName: loki-gateway-tls
        #    hosts:
        #      - gateway.loki.example.com
      # Basic auth configuration
      basicAuth:
        # -- Enables basic authentication for the gateway
        enabled: true
        # -- The basic auth username for the gateway
        username: null
        # -- The basic auth password for the gateway
        password: null
        # -- Uses the specified users from the `loki.tenants` list to create the htpasswd file.
        # if `loki.tenants` is not set, the `gateway.basicAuth.username` and `gateway.basicAuth.password` are used.
        # The value is templated using `tpl`. Override this to use a custom htpasswd, e.g. in case the default causes
        # high CPU load.
        # @default -- Either `loki.tenants` or `gateway.basicAuth.username` and `gateway.basicAuth.password`.
        htpasswd: >-
          {{ if .Values.loki.tenants }}


            {{- range $t := .Values.loki.tenants }}
          {{ htpasswd (required "All tenants must have a 'name' set" $t.name) (required "All tenants must have a 'password' set" $t.password) }}


            {{- end }}
          {{ else }} {{ htpasswd (required "'gateway.basicAuth.username' is required" .Values.gateway.basicAuth.username) (required "'gateway.basicAuth.password' is required" .Values.gateway.basicAuth.password) }} {{ end }}
        # -- Existing basic auth secret to use. Must contain '.htpasswd'
        existingSecret: loki-secret
      # Configures the readiness probe for the gateway
      readinessProbe:
        httpGet:
          path: /
          port: http-metrics
        initialDelaySeconds: 15
        timeoutSeconds: 1
      nginxConfig:
        # -- Which schema to be used when building URLs. Can be 'http' or 'https'.
        schema: http
        # -- Enable listener for IPv6, disable on IPv4-only systems
        enableIPv6: true
        # -- NGINX log format
        logFormat: |-
          main '$remote_addr - $remote_user [$time_local]  $status '
                  '"$request" $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
        # -- Allows appending custom configuration to the server block
        serverSnippet: |-
          client_max_body_size 20M;
        # -- Allows appending custom configuration to the http block, passed through the `tpl` function to allow templating
        httpSnippet: |-
          {{ if .Values.loki.tenants }}proxy_set_header X-Scope-OrgID $remote_user;{{ end }}
        # -- Whether ssl should be appended to the listen directive of the server block or not.
        ssl: false
        # -- Override Read URL
        customReadUrl: null
        # -- Override Write URL
        customWriteUrl: null
        # -- Override Backend URL
        customBackendUrl: null
        # -- Allows overriding the DNS resolver address nginx will use.
        resolver: ""
        # -- Config file contents for Nginx. Passed through the `tpl` function to allow templating
        # @default -- See values.yaml
        file: |
          {{- include "loki.nginxFile" . | indent 2 -}}
    # -- Configuration for the distributor
    #distributor:
    #  otlp_config:
    #    default_resource_attributes_as_index_labels:
    #      - job
    #      - worker
    # -- Configuration for the ingester
    ingester:
      # -- Number of replicas for the ingester, when zoneAwareReplication.enabled is true, the total
      # number of replicas will match this value with each zone having 1/3rd of the total replicas.
      replicas: 4
      # -- hostAliases to add
      hostAliases: []
      #  - ip: 1.2.3.4
      #    hostnames:
      #      - domain.tld
      autoscaling:
        # -- Enable autoscaling for the ingester
        enabled: false
        # -- Minimum autoscaling replicas for the ingester
        minReplicas: 1
        # -- Maximum autoscaling replicas for the ingester
        maxReplicas: 3
        # -- Target CPU utilisation percentage for the ingester
        targetCPUUtilizationPercentage: 60
        # -- Target memory utilisation percentage for the ingester
        targetMemoryUtilizationPercentage: null
        # -- Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)
        customMetrics: []
        # - type: Pods
        #   pods:
        #     metric:
        #       name: loki_lines_total
        #     target:
        #       type: AverageValue
        #       averageValue: 10k
        behavior:
          # -- Enable autoscaling behaviours
          enabled: false
          # -- define scale down policies, must conform to HPAScalingRules
          scaleDown: {}
          # -- define scale up policies, must conform to HPAScalingRules
          scaleUp: {}
      image:
        # -- The Docker registry for the ingester image. Overrides `loki.image.registry`
        registry: null
        # -- Docker image repository for the ingester image. Overrides `loki.image.repository`
        repository: null
        # -- Docker image tag for the ingester image. Overrides `loki.image.tag`
        tag: null
      # -- Command to execute instead of defined in Docker image
      command: null
      priorityClassName: null
      # -- Labels for ingester pods
      podLabels: {}
      # -- Annotations for ingester pods
      podAnnotations: {}
      # -- The name of the PriorityClass for ingester pods
      # -- Labels for ingestor service
      serviceLabels: {}
      # -- Additional CLI args for the ingester
      extraArgs:
        - -config.expand-env=true
      # -- Environment variables to add to the ingester pods
      extraEnv: []
      # -- Environment variables from secrets or configmaps to add to the ingester pods
      extraEnvFrom:
        - secretRef:
            name: loki-secret
      # -- Volume mounts to add to the ingester pods
      extraVolumeMounts: []
      # -- Volumes to add to the ingester pods
      extraVolumes: []
      # -- Resource requests and limits for the ingester
      resources: {}
      # -- Containers to add to the ingester pods
      extraContainers: []
      # -- Init containers to add to the ingester pods
      initContainers: []
      # -- Grace period to allow the ingester to shutdown before it is killed. Especially for the ingestor,
      # this must be increased. It must be long enough so ingesters can be gracefully shutdown flushing/transferring
      # all data and to successfully leave the member ring on shutdown.
      terminationGracePeriodSeconds: 300
      # -- Lifecycle for the ingester container
      lifecycle: {}
      # -- topologySpread for ingester pods.
      # @default -- Defaults to allow skew no more than 1 node
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: ingester
      # -- Affinity for ingester pods. Ignored if zoneAwareReplication is enabled.
      # @default -- Hard node anti-affinity
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: ingester
              topologyKey: kubernetes.io/hostname
      # -- Pod Disruption Budget maxUnavailable
      maxUnavailable: 1
      # -- Node selector for ingester pods
      nodeSelector: {}
      # -- Tolerations for ingester pods
      tolerations: []
      # -- readiness probe settings for ingester pods. If empty, use `loki.readinessProbe`
      readinessProbe: {}
      # -- liveness probe settings for ingester pods. If empty use `loki.livenessProbe`
      livenessProbe: {}
      persistence:
        # -- Enable creating PVCs which is required when using boltdb-shipper
        enabled: true
        # -- Use emptyDir with ramdisk for storage. **Please note that all data in ingester will be lost on pod restart**
        inMemory: false
        # -- List of the ingester PVCs
        # @notationType -- list
        claims:
          - name: data
            size: 40Gi
            #   -- Storage class to be used.
            #   If defined, storageClassName: <storageClass>.
            #   If set to "-", storageClassName: "", which disables dynamic provisioning.
            #   If empty or set to null, no storageClassName spec is
            #   set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
            storageClass: null
            # - name: wal
            #   size: 150Gi
        # -- Enable StatefulSetAutoDeletePVC feature
        enableStatefulSetAutoDeletePVC: false
        whenDeleted: Retain
        whenScaled: Retain
      # -- Adds the appProtocol field to the ingester service. This allows ingester to work with istio protocol selection.
      appProtocol:
        # -- Set the optional grpc service protocol. Ex: "grpc", "http2" or "https"
        grpc: ""
      # Use snappy insead of the default gzip: slightly worse compression but very fast encoding/decoding
      chunk_encoding: snappy
      # Configure max_chunk_age
      max_chunk_age: 8h
      # -- Enabling zone awareness on ingesters will create 3 statefulests where all writes will send a replica to each zone.
      # This is primarily intended to accelerate rollout operations by allowing for multiple ingesters within a single
      # zone to be shutdown and restart simultaneously (the remaining 2 zones will be guaranteed to have at least one copy
      # of the data).
      # Note: This can be used to run Loki over multiple cloud provider availability zones however this is not currently
      # recommended as Loki is not optimized for this and cross zone network traffic costs can become extremely high
      # extremely quickly. Even with zone awareness enabled, it is recommended to run Loki in a single availability zone.
      zoneAwareReplication:
        # -- Enable zone awareness.
        enabled: true
        # -- The percent of replicas in each zone that will be restarted at once. In a value of 0-100
        maxUnavailablePct: 50
        # -- zoneA configuration
        zoneA:
          # -- optionally define a node selector for this zone
          nodeSelector:
            kubernetes.azure.com/agentpool: lnxusr001
            topology.kubernetes.io/zone: westeurope-1
          # -- optionally define extra affinity rules, by default different zones are not allowed to schedule on the same host
          extraAffinity: {}
          # -- Specific annotations to add to zone A statefulset
          annotations: {}
          # -- Specific annotations to add to zone A pods
          podAnnotations: {}
        zoneB:
          # -- optionally define a node selector for this zone
          nodeSelector:
            kubernetes.azure.com/agentpool: lnxusr001
            topology.kubernetes.io/zone: westeurope-2
          # -- optionally define extra affinity rules, by default different zones are not allowed to schedule on the same host
          extraAffinity: {}
          # -- Specific annotations to add to zone B statefulset
          annotations: {}
          # -- Specific annotations to add to zone B pods
          podAnnotations: {}
        zoneC:
          # -- optionally define a node selector for this zone
          nodeSelector:
            kubernetes.azure.com/agentpool: lnxusr001
            topology.kubernetes.io/zone: westeurope-3
          # -- optionally define extra affinity rules, by default different zones are not allowed to schedule on the same host
          extraAffinity: {}
          # -- Specific annotations to add to zone C statefulset
          annotations: {}
          # -- Specific annotations to add to zone C pods
          podAnnotations: {}
        # -- The migration block allows migrating non zone aware ingesters to zone aware ingesters.
        migration:
          enabled: false
          excludeDefaultZone: false
          readPath: false
          writePath: false
    querier:
      # -- Number of replicas for the querier
      replicas: 2
      # -- hostAliases to add
      hostAliases: []
      #  - ip: 1.2.3.4
      #    hostnames:
      #      - domain.tld
      autoscaling:
        # -- Enable autoscaling for the querier, this is only used if `indexGateway.enabled: true`
        enabled: true
        # -- Minimum autoscaling replicas for the querier
        minReplicas: 2
        # -- Maximum autoscaling replicas for the querier
        maxReplicas: 12
        # -- Target CPU utilisation percentage for the querier
        targetCPUUtilizationPercentage: 80
        # -- Target memory utilisation percentage for the querier
        targetMemoryUtilizationPercentage: null
        # -- Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)
        customMetrics: []
        # - type: External
        #   external:
        #     metric:
        #       name: loki_inflight_queries
        #     target:
        #       type: AverageValue
        #       averageValue: 12
        behavior:
          # -- Enable autoscaling behaviours
          enabled: false
          # -- define scale down policies, must conform to HPAScalingRules
          scaleDown: {}
          # -- define scale up policies, must conform to HPAScalingRules
          scaleUp: {}
      image:
        # -- The Docker registry for the querier image. Overrides `loki.image.registry`
        registry: null
        # -- Docker image repository for the querier image. Overrides `loki.image.repository`
        repository: null
        # -- Docker image tag for the querier image. Overrides `loki.image.tag`
        tag: null
      # Configure query_ingesters_within to align with max_chunk_age
      # ref: https://grafana.com/blog/2024/01/04/the-concise-guide-to-loki-how-to-work-with-out-of-order-and-older-logs/
      query_ingesters_within: 8h
      # -- Command to execute instead of defined in Docker image
      command: null
      # -- The name of the PriorityClass for querier pods
      priorityClassName: null
      # -- Labels for querier pods
      podLabels: {}
      # -- Annotations for querier pods
      podAnnotations: {}
      # -- Labels for querier service
      serviceLabels: {}
      # -- Additional CLI args for the querier
      extraArgs:
        - -config.expand-env=true
      # -- Environment variables to add to the querier pods
      extraEnv: []
      # -- Environment variables from secrets or configmaps to add to the querier pods
      extraEnvFrom:
        - secretRef:
            name: loki-secret
      # -- Volume mounts to add to the querier pods
      extraVolumeMounts: []
      # -- Volumes to add to the querier pods
      extraVolumes: []
      # -- Resource requests and limits for the querier
      resources:
        requests:
          cpu: 500m
          memory: 500Mi
        limits:
          cpu: 6000m
          memory: 4500Mi
      # -- Containers to add to the querier pods
      extraContainers: []
      # -- Init containers to add to the querier pods
      initContainers: []
      # -- Grace period to allow the querier to shutdown before it is killed
      terminationGracePeriodSeconds: 30
      # -- topologySpread for querier pods.
      # @default -- Defaults to allow skew no more then 1 node
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: querier
      # -- Affinity for querier pods.
      # @default -- Hard node anti-affinity
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: querier
              topologyKey: kubernetes.io/hostname
      # -- Pod Disruption Budget maxUnavailable
      maxUnavailable: 1
      # -- Max Surge for querier pods
      maxSurge: 0
      # -- Node selector for querier pods
      nodeSelector: {}
      # -- Tolerations for querier pods
      tolerations: []
      # -- DNSConfig for querier pods
      dnsConfig: {}
      persistence:
        # -- Enable creating PVCs for the querier cache
        enabled: true
        # -- Size of persistent disk
        size: 20Gi
        # -- Storage class to be used.
        # If defined, storageClassName: <storageClass>.
        # If set to "-", storageClassName: "", which disables dynamic provisioning.
        # If empty or set to null, no storageClassName spec is
        # set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
        storageClass: null
        # -- Annotations for querier PVCs
        annotations: {}
      # -- Adds the appProtocol field to the querier service. This allows querier to work with istio protocol selection.
      appProtocol:
        # -- Set the optional grpc service protocol. Ex: "grpc", "http2" or "https"
        grpc: ""
      engine:
        timeout: 5m
      query_timeout: 5m
      # default max_concurrent is 10
      max_concurrent: 128
    # -- Configuration for the query-frontend
    queryFrontend:
      # -- Number of replicas for the query-frontend
      replicas: 1
      # -- hostAliases to add
      hostAliases: []
      #  - ip: 1.2.3.4
      #    hostnames:
      #      - domain.tld
      autoscaling:
        # -- Enable autoscaling for the query-frontend
        enabled: true
        # -- Minimum autoscaling replicas for the query-frontend
        minReplicas: 2
        # -- Maximum autoscaling replicas for the query-frontend
        maxReplicas: 4
        # -- Target CPU utilisation percentage for the query-frontend
        targetCPUUtilizationPercentage: 75
        # -- Target memory utilisation percentage for the query-frontend
        targetMemoryUtilizationPercentage: 75
        # -- Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)
        customMetrics: []
        # - type: Pods
        #   pods:
        #     metric:
        #       name: loki_query_rate
        #     target:
        #       type: AverageValue
        #       averageValue: 100
        behavior:
          # -- Enable autoscaling behaviours
          enabled: false
          # -- define scale down policies, must conform to HPAScalingRules
          scaleDown: {}
          # -- define scale up policies, must conform to HPAScalingRules
          scaleUp: {}
      image:
        # -- The Docker registry for the query-frontend image. Overrides `loki.image.registry`
        registry: null
        # -- Docker image repository for the query-frontend image. Overrides `loki.image.repository`
        repository: null
        # -- Docker image tag for the query-frontend image. Overrides `loki.image.tag`
        tag: null
      # -- Command to execute instead of defined in Docker image
      command: null
      # -- The name of the PriorityClass for query-frontend pods
      priorityClassName: null
      # -- Labels for query-frontend pods
      podLabels: {}
      # -- Annotations for query-frontend pods
      podAnnotations: {}
      # -- Labels for query-frontend service
      serviceLabels: {}
      # -- Additional CLI args for the query-frontend
      extraArgs:
        - -config.expand-env=true
      # -- Environment variables to add to the query-frontend pods
      extraEnv: []
      # -- Environment variables from secrets or configmaps to add to the query-frontend pods
      extraEnvFrom:
        - secretRef:
            name: loki-secret
      # -- Volume mounts to add to the query-frontend pods
      extraVolumeMounts: []
      # -- Volumes to add to the query-frontend pods
      extraVolumes: []
      # -- Resource requests and limits for the query-frontend
      resources:
        requests:
          cpu: 100m
          memory: 300Mi
        limits:
          cpu: 1000m
          memory: 4000Mi
      # -- Containers to add to the query-frontend pods
      extraContainers: []
      # -- Grace period to allow the query-frontend to shutdown before it is killed
      terminationGracePeriodSeconds: 30
      # -- Affinity for query-frontend pods.
      # @default -- Hard node anti-affinity
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-frontend
              topologyKey: kubernetes.io/hostname
      # -- Pod Disruption Budget maxUnavailable
      maxUnavailable: 1
      # -- Node selector for query-frontend pods
      nodeSelector: {}
      # -- Tolerations for query-frontend pods
      tolerations: []
      # -- Adds the appProtocol field to the queryFrontend service. This allows queryFrontend to work with istio protocol selection.
      appProtocol:
        # -- Set the optional grpc service protocol. Ex: "grpc", "http2" or "https"
        grpc: ""
    ruler:
      replicas: 2
    resultsCache:
      # -- Specify how long cached results should be stored in the results-cache before being expired
      defaultValidity: 168h
      # -- Total number of results-cache replicas
      replicas: 2
      # -- Amount of memory allocated to results-cache for object storage (in MB).
      allocatedMemory: 8192
      # -- Number of parallel threads for cache write back
      writebackParallelism: 10
    chunksCache:
      # -- Specify how long cached chunks should be stored in the chunks-cache before being expired
      defaultValidity: 168h
      # -- Total number of chunks-cache replicas
      replicas: 6
      # -- Amount of memory allocated to chunks-cache for object storage (in MB).
      allocatedMemory: 32768
      # -- Number of parallel threads for cache write back
      writebackParallelism: 10
